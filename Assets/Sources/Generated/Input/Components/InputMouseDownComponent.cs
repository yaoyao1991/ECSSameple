//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputContext {

    public InputEntity mouseDownEntity { get { return GetGroup(InputMatcher.MouseDown).GetSingleEntity(); } }
    public MouseDownComponent mouseDown { get { return mouseDownEntity.mouseDown; } }
    public bool hasMouseDown { get { return mouseDownEntity != null; } }

    public InputEntity SetMouseDown(System.Collections.Generic.Dictionary<int, System.Nullable<UnityEngine.Vector2>> newMouseDown) {
        if (hasMouseDown) {
            throw new Entitas.EntitasException("Could not set MouseDown!\n" + this + " already has an entity with MouseDownComponent!",
                "You should check if the context already has a mouseDownEntity before setting it or use context.ReplaceMouseDown().");
        }
        var entity = CreateEntity();
        entity.AddMouseDown(newMouseDown);
        return entity;
    }

    public void ReplaceMouseDown(System.Collections.Generic.Dictionary<int, System.Nullable<UnityEngine.Vector2>> newMouseDown) {
        var entity = mouseDownEntity;
        if (entity == null) {
            entity = SetMouseDown(newMouseDown);
        } else {
            entity.ReplaceMouseDown(newMouseDown);
        }
    }

    public void RemoveMouseDown() {
        mouseDownEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public MouseDownComponent mouseDown { get { return (MouseDownComponent)GetComponent(InputComponentsLookup.MouseDown); } }
    public bool hasMouseDown { get { return HasComponent(InputComponentsLookup.MouseDown); } }

    public void AddMouseDown(System.Collections.Generic.Dictionary<int, System.Nullable<UnityEngine.Vector2>> newMouseDown) {
        var index = InputComponentsLookup.MouseDown;
        var component = (MouseDownComponent)CreateComponent(index, typeof(MouseDownComponent));
        component.mouseDown = newMouseDown;
        AddComponent(index, component);
    }

    public void ReplaceMouseDown(System.Collections.Generic.Dictionary<int, System.Nullable<UnityEngine.Vector2>> newMouseDown) {
        var index = InputComponentsLookup.MouseDown;
        var component = (MouseDownComponent)CreateComponent(index, typeof(MouseDownComponent));
        component.mouseDown = newMouseDown;
        ReplaceComponent(index, component);
    }

    public void RemoveMouseDown() {
        RemoveComponent(InputComponentsLookup.MouseDown);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherMouseDown;

    public static Entitas.IMatcher<InputEntity> MouseDown {
        get {
            if (_matcherMouseDown == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.MouseDown);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherMouseDown = matcher;
            }

            return _matcherMouseDown;
        }
    }
}
