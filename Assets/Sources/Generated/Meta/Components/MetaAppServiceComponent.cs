//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaContext {

    public MetaEntity appServiceEntity { get { return GetGroup(MetaMatcher.AppService).GetSingleEntity(); } }
    public AppServiceComponent appService { get { return appServiceEntity.appService; } }
    public bool hasAppService { get { return appServiceEntity != null; } }

    public MetaEntity SetAppService(IAppService newInstance) {
        if (hasAppService) {
            throw new Entitas.EntitasException("Could not set AppService!\n" + this + " already has an entity with AppServiceComponent!",
                "You should check if the context already has a appServiceEntity before setting it or use context.ReplaceAppService().");
        }
        var entity = CreateEntity();
        entity.AddAppService(newInstance);
        return entity;
    }

    public void ReplaceAppService(IAppService newInstance) {
        var entity = appServiceEntity;
        if (entity == null) {
            entity = SetAppService(newInstance);
        } else {
            entity.ReplaceAppService(newInstance);
        }
    }

    public void RemoveAppService() {
        appServiceEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class MetaEntity {

    public AppServiceComponent appService { get { return (AppServiceComponent)GetComponent(MetaComponentsLookup.AppService); } }
    public bool hasAppService { get { return HasComponent(MetaComponentsLookup.AppService); } }

    public void AddAppService(IAppService newInstance) {
        var index = MetaComponentsLookup.AppService;
        var component = (AppServiceComponent)CreateComponent(index, typeof(AppServiceComponent));
        component.instance = newInstance;
        AddComponent(index, component);
    }

    public void ReplaceAppService(IAppService newInstance) {
        var index = MetaComponentsLookup.AppService;
        var component = (AppServiceComponent)CreateComponent(index, typeof(AppServiceComponent));
        component.instance = newInstance;
        ReplaceComponent(index, component);
    }

    public void RemoveAppService() {
        RemoveComponent(MetaComponentsLookup.AppService);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class MetaMatcher {

    static Entitas.IMatcher<MetaEntity> _matcherAppService;

    public static Entitas.IMatcher<MetaEntity> AppService {
        get {
            if (_matcherAppService == null) {
                var matcher = (Entitas.Matcher<MetaEntity>)Entitas.Matcher<MetaEntity>.AllOf(MetaComponentsLookup.AppService);
                matcher.componentNames = MetaComponentsLookup.componentNames;
                _matcherAppService = matcher;
            }

            return _matcherAppService;
        }
    }
}
